{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Homework2a","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"1YUrREmhEH5j"},"source":["# Homework2a Group 9\n","## Michael Karaman, Alexys Lamkin, Yiyun Zhang"]},{"cell_type":"markdown","metadata":{"id":"RH8GbFTTOnEv"},"source":["### Exercise 1\n","The original matrix is $A_1 =\n","  \\begin{pmatrix}\n","  0 & 0 & 1 & \\frac{1}{2}\\\\\n","  \\frac{1}{3} & 0 & 0 & 0\\\\\n","  \\frac{1}{3} & \\frac{1}{2} & 0 & \\frac{1}{2}\\\\\n","  \\frac{1}{3} & \\frac{1}{2} & 0 & 0\n","  \\end{pmatrix}$. The updated matrix(with page 5 added) is $A_2 =\n","  \\begin{pmatrix}\n","  0 & 0 & 1 & \\frac{1}{2} & 0\\\\\n","  \\frac{1}{3} & 0 & 0 & 0 & 0\\\\\n","  \\frac{1}{3} & \\frac{1}{2} & 0 & \\frac{1}{2} & 1\\\\\n","  \\frac{1}{3} & \\frac{1}{2} & 0 & 0 & 0\\\\\n","  0 & 0 & \\frac{1}{2} & 0 & 0\n","  \\end{pmatrix}$."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SChrvPsoU6Bt","executionInfo":{"status":"ok","timestamp":1629346260911,"user_tz":240,"elapsed":156,"user":{"displayName":"Alexys Onyemakonor","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghcy-rinLlnxJ70YfkeHSMhbO6hdAcHjM12DX6Q=s64","userId":"15627062774810642330"}},"outputId":"d6d2ccde-4a05-4b41-e7eb-c43c32a4ae40"},"source":["import numpy as np\n","from numpy import linalg as la\n","A1 = np.array([[0,0,1,1/2],[1/3,0,0,0],[1/3,1/2,0,1/2],[1/3,1/2,0,0]])\n","A2 = np.array([[0,0,1,1/2,0],[1/3,0,0,0,0],[1/3,1/2,0,1/2,1],[1/3,1/2,0,0,0],[0,0,1/2,0,0]])\n","w1,v1 = la.eig(A1)\n","w2,v2 = la.eig(A2)\n","\n","index = 0\n","print(\"Original importance score\")\n","for vectors in v1:\n","  index += 1\n","  print(\"x_{} = {}\".format(index, vectors[0]/sum(v1[:])[0]))\n","print(\"x3 < x1\\n\")\n","\n","index = 0\n","print(\"Updated importance score, with page 5 added\")\n","for vectors in v2:\n","  index += 1\n","  print(\"x_{} = {}\".format(index, vectors[0]/sum(v2[:])[0]))\n","print(\"x3 < x1\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Original importance score\n","x_1 = (0.3870967741935484+0j)\n","x_2 = (0.12903225806451618+0j)\n","x_3 = (0.29032258064516114+0j)\n","x_4 = (0.1935483870967743+0j)\n","x3 < x1\n","\n","Updated importance score, with page 5 added\n","x_1 = (0.3267149773060184+0j)\n","x_2 = (0.09430017485233329+0j)\n","x_3 = (0.3097516543500841+0j)\n","x_4 = (0.13512715063335828+0j)\n","x_5 = (0.13410604285820582+0j)\n","x3 < x1\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Z0yNwIdl1sXS"},"source":["$x_3$ is still lower than $x_1$, therefore the answer is no."]},{"cell_type":"markdown","metadata":{"id":"D2cPa5cq3I4H"},"source":["### Exercise 2"]},{"cell_type":"markdown","metadata":{"id":"cVXoCYClLGqk"},"source":["Below details a web $W$ consisting of $r$ disconnected subwebs where $r=3$:\n","\n","W1: \n","* page 1 links to page 2\n","* page 2 links to page 1\n","\n","where the link matrix $A_1 = \\begin{pmatrix} \n","0 & 1 \\\\\n","1 & 0 \\\\\n","\\end{pmatrix}$\n","\n","W2:\n","* page 3 links to page 5\n","* page 4 links to page 3\n","* page 5 links to page 4\n","\n","where the link matrix $A_2 = \\begin{pmatrix} \n","0 & 1 & 0 \\\\\n","0 & 0 & 1 \\\\\n","1 & 0 & 0 \\\\\n","\\end{pmatrix}$\n","\n","W3:\n","* page 6 links to page 7\n","* page 7 links to page 6\n","* page 8 links to page 6\n","\n","where the link matrix $A_3 = \\begin{pmatrix} \n","0 & 1 & 1 \\\\\n","1 & 0 & 0 \\\\\n","0 & 0 & 0 \\\\\n","\\end{pmatrix}$\n","\n","The link matrix for web $W = A = \\begin{pmatrix} \n","A_1 & 0 & 0 \\\\\n","0 & A_2 & 0 \\\\\n","0 & 0 & A_3 \\\\\n","\\end{pmatrix}$\n","\n","Since each link matrix for each subweb within $A$ is column-stochastic, an eigenvector exists with an eigenvalue of 1 and since each link matrix (i.e., $A_1, A_2, A_3$) is unique, each eigenvector will be unique ( i.e., $\\begin{pmatrix} \n","0 \\\\ 1 \\\\ \\end{pmatrix}$, $\\begin{pmatrix} \n","1 \\\\ 1 \\\\ 1 \\\\ \\end{pmatrix}$, and $\\begin{pmatrix} \n","1 \\\\ 1 \\\\ 0 \\\\ \\end{pmatrix}$, respectively); therefore, $dim(V_1(A)) \\ge r = 3$.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"lAFFKuZW3MR8"},"source":["### Exercise 3"]},{"cell_type":"markdown","metadata":{"id":"vuVAy8PG223Q"},"source":["After adding a link from page 5 to page 1 in figure 2.2, the link matrix *A* becomes $A = \n","\\begin{pmatrix}\n","0 & 1 & 0 & 0 & \\frac{1}{3} \\\\\n","1 & 0 & 0 & 0 & 0 \\\\\n","0 & 0 & 0 & 1 & \\frac{1}{3} \\\\\n","0 & 0 & 1 & 0 & \\frac{1}{3} \\\\\n","0 & 0 & 0 & 0 & 0\n","\\end{pmatrix}$ where $dim(V_1(A)) = 2$\n"]},{"cell_type":"markdown","metadata":{"id":"NYZfLPjC3Nbk"},"source":["### Exercise 4"]},{"cell_type":"markdown","metadata":{"id":"hxMVoxlQ8st4"},"source":["After removing link from page 3 to page 1, page 3 becomes a dangling node and the link matrix becomes column-substochastic: \n","$\\begin{pmatrix}  \n","0 & 0 & 0 & \\frac{1}{2}\\\\\n","\\frac{1}{3} & 0 & 0 & 0\\\\\n","\\frac{1}{3} & \\frac{1}{2} & 0 & \\frac{1}{2}\\\\\n","\\frac{1}{3} & \\frac{1}{2} & 0 & 0\\\\\n","\\end{pmatrix}$ "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z-OE37dVfJQS","executionInfo":{"status":"ok","timestamp":1629346261339,"user_tz":240,"elapsed":285,"user":{"displayName":"Alexys Onyemakonor","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghcy-rinLlnxJ70YfkeHSMhbO6hdAcHjM12DX6Q=s64","userId":"15627062774810642330"}},"outputId":"2e2d48d9-d6f4-4d2a-e32a-472bb5337d0c"},"source":["import numpy as np\n","from numpy import linalg as la\n","\n","A=np.array([[0,0,0,1/2],[1/3,0,0,0],[1/3,1/2,0,1/2],[1/3,1/2,0,0]])\n","\n","w,v = la.eig(A)\n","\n","#largest (Perron) eigenvalue (element 3)\n","print(\"\\nLargest Perron eigenvalue:\") \n","print(w.max())\n","\n","#non-negative Perron eigenvector (used random scaler)\n","eigenvect = -3*v[:,3]\n","print(\"\\nNon-negative Perron eigenvector:\") \n","print(eigenvect)\n","\n","#nomralize\n","norm_eigenvect = eigenvect / eigenvect.sum()\n","print(\"\\nNormalied eigenvector:\") \n","print(norm_eigenvect)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["\n","Largest Perron eigenvalue:\n","(0.5613532393351084+0j)\n","\n","Non-negative Perron eigenvector:\n","[1.12438006-0.j 0.66766045-0.j 2.38672884-0.j 1.26234878-0.j]\n","\n","Normalied eigenvector:\n","[0.20664504-0.j 0.12270648-0.j 0.43864676-0.j 0.23200172-0.j]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Vm4bS-7hmOyW"},"source":["Given the math above, page 3 has the highest important score. This seems reasonable considering it has the highest number of backlinks. "]},{"cell_type":"markdown","metadata":{"id":"20uWSaB53ODF"},"source":["### Exercise 5"]},{"cell_type":"markdown","metadata":{"id":"XaJlOnOLcJn1"},"source":["For any web, the importance score for for page $ \\begin{align}\n","  x_j = \\sum_{j \\in L_k} \\frac{x_j}{n_j}\n","\\end{align}$,\n","where $n_j$ is the number of outgoing links from page $j$. If page $x_j$ has no backlinks, then the importance score is 0 since $L_k$ is the empty set $\\emptyset$.\n"]},{"cell_type":"markdown","metadata":{"id":"OCFv8xPK3Ol_"},"source":["### Exercise 6"]},{"cell_type":"code","metadata":{"id":"Xfzt8ee73PGG"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nBphjvzh06wN"},"source":["Consider web $W$ where: "]},{"cell_type":"markdown","metadata":{"id":"KIG1ZDzC3POI"},"source":["### Exercise 7"]},{"cell_type":"markdown","metadata":{"id":"AGuacCQzD5Zi"},"source":["Let $(i,j)$ be arbitrary $(row,column)$ combination.\n","$A$ is an $n*n$ column-stochastic matrix, so it has\n","\\begin{align}\n","  A_j = \\sum_{i=1}^{n} A_{i,j} = 1\n","\\end{align}\n","for any $j$(each column). \\\\\n","$S$ denote an $n*n$ matrix with all entries $\\frac{1}{n}$, so it has\n","\\begin{align}\n","  S_{i,j} = \\frac{1}{n} \n","\\end{align}\n","\\begin{align}\n","  S_j=\\sum_{1}^{n} \\frac{1}{n} = 1\n","\\end{align}\n","Therefore, for each column, the equation $M = (1-m)A + mS = (1-m)*1 + m*1 = 1$. \n","Since $0 \\leq m \\leq 1,0 \\leq M_{i,j}\\leq 1$, for any $i,j$. \\\\\n","So M is also a column-stochastic matrix."]},{"cell_type":"markdown","metadata":{"id":"wfmTz9uI3Pvy"},"source":["### Exercise 8"]},{"cell_type":"markdown","metadata":{"id":"QzwpM7-XIiwv"},"source":["Let $A$ and $B$ be $n*n$, column-stochastic matrices, $S=A*B$,   and $(i,j)$ is arbitrary $(row,column)$ combination. \\\\\n","By definition, for any column in $A$ and $B$, it has \\begin{align}\n","  \\sum_{i=1}^{n} A_{i,j} = \\sum_{i=1}^{n} B_{i,j} =  1\n","\\end{align}\n","\\begin{align}\n","  S_{ij}=A_{i,1}*B_{1,j}+A_{i,2}*B_{2,j}+...+A_{i,n}*B_{n,j} = \\sum_{k=1}^{n} A_{i,k} * B_{k,j}\n","\\end{align}\n","\\begin{align}\n","  S_{j} = \\sum_{i=1}^{n} \\sum_{k=1}^{n} A_{i,k} * B_{k,j} = \\sum_{i=1}^{n}  A_{i,k} * \\sum_{k=1}^{n}B_{k,j}\n","\\end{align}\n","Since \n","\\begin{align}\n","  \\sum_{i=1}^{n} A_{i,j} = \\sum_{i=1}^{n} B_{i,j} = \\sum_{i=1}^{n}  A_{i,k} = \\sum_{k=1}^{n}B_{k,j} = 1\n","\\end{align} \\\\\n","$S_j = 1*1=1$, so S is column-stochastic."]},{"cell_type":"markdown","metadata":{"id":"391tLpJ13QeY"},"source":["### Exercise 9"]},{"cell_type":"markdown","metadata":{"id":"TCtMX7iKmvEs"},"source":["For a page with no backlinks, the link matrix $Ax=0$, Since $s$ is a column vector with all entries $\\frac{1}{n}$, $M=(1-m)Ax+ms=(1-m)*0+m*(\\frac{1}{n})=\\frac{m}{n}$"]},{"cell_type":"markdown","metadata":{"id":"bwasvYS43REl"},"source":["### Exercise 10"]},{"cell_type":"markdown","metadata":{"id":"QsG4LT962apy"},"source":["Since $(A^2)_{i,j}=\\sum_{k} A_{i,k}A_{k,j}$, $A_{i,k} > 0 $ means 1 step from $i$ to $k$ and $A_{j,k} > 0$ means 1 step from $j$ to $k$, so $(A^2)_{i,j}>0$ means 2 steps from $i$ to $j$. \\\n","\\\n","$(A^p)_{i,j}=\\sum_{k} A_{i,k}A_{k,j}...A_{i,p}A_{p,j}$, therefore $(A^p)_{i,j}>0$ means p steps from $i$ to $j$. \\\n","\\\n","In $(I+A+A^2+...+A^p)_{i,j}$, it means $0+1+...+p$ steps from $i$ to $j$. Since $p$ is the maximum distance , $i$ can only reached from $j$ in p or fewer steps in this case. \\\n","\\\n","If the web is strongly connected, $A^k_{i,j}>0, k={0...n-1}$, therefore $I+A+A^2+...+A^{n-1}$ is a positive matrix. \\\n","\\\n","\\begin{align}\n","  B_{j} = (\\frac{1}{n})\\sum_{k=0}^{n-1} A_{j}^k = (\\frac{1}{n})(I+1+1+...+n-1) = (\\frac{1}{n})n = 1\n","\\end{align} \\\n","Therefore, B is column-stochastic and positive. \\\n","\\\n","$x\\in V_1(B)$, where B is column-stochastic and positive. If $x\\in V_1(A)$ as well, then A is also a strongly connected web, matrix A is positive and column-stochastic."]},{"cell_type":"markdown","metadata":{"id":"fcFsu9oI3RvH"},"source":["### Exercise 11"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yeo8sKCIqCZ2","executionInfo":{"status":"ok","timestamp":1629346261341,"user_tz":240,"elapsed":12,"user":{"displayName":"Alexys Onyemakonor","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghcy-rinLlnxJ70YfkeHSMhbO6hdAcHjM12DX6Q=s64","userId":"15627062774810642330"}},"outputId":"a24ada1b-d5f2-478d-f418-4b0625c32eda"},"source":["import numpy as np\n","from numpy import linalg as la\n","m = 0.15\n","A = np.array([[0,0,1,1/2,0],[1/3,0,0,0,0],[1/3,1/2,0,1/2,1],[1/3,1/2,0,0,0],[0,0,1/2,0,0]])\n","S = np.array([[1/5,1/5,1/5,1/5,1/5],[1/5,1/5,1/5,1/5,1/5],[1/5,1/5,1/5,1/5,1/5],[1/5,1/5,1/5,1/5,1/5],[1/5,1/5,1/5,1/5,1/5]])\n","M = (1-m)*A + m*S\n","\n","w,v = la.eig(M)\n","\n","index = 0\n","Mv = 0\n","print(\"Importance score\")\n","for vectors in v:\n","  index += 1\n","  importanceScore = vectors[0]/sum(v[:])[0]\n","  Mv += importanceScore\n","  print(\"x_{} = {}\".format(index, importanceScore))\n","print(\"The components are all positive and the sum of them is:\", Mv)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Importance score\n","x_1 = (0.3087864035145815+0j)\n","x_2 = (0.10407967804444451+0j)\n","x_3 = (0.3031569478829746+0j)\n","x_4 = (0.14326485614089604+0j)\n","x_5 = (0.14071211441710335+0j)\n","The components are all positive and the sum of them is: (1+0j)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"PnAvDWCD3SM0"},"source":["### Exercise 12"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O8dyNmGgf9ar","executionInfo":{"status":"ok","timestamp":1629346261341,"user_tz":240,"elapsed":11,"user":{"displayName":"Alexys Onyemakonor","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghcy-rinLlnxJ70YfkeHSMhbO6hdAcHjM12DX6Q=s64","userId":"15627062774810642330"}},"outputId":"da192a99-ed63-4fee-d8f3-8749fe4bf27f"},"source":["import numpy as np\n","from numpy import linalg as la\n","m = 0.15\n","A = np.array([[0,0,1,1/2,0,1/5],[1/3,0,0,0,0,1/5],[1/3,1/2,0,1/2,1,1/5],[1/3,1/2,0,0,0,1/5],[0,0,1/2,0,0,1/5],[0,0,0,0,0,0]])\n","S = np.array([[1/6,1/6,1/6,1/6,1/6,1/6],[1/6,1/6,1/6,1/6,1/6,1/6],[1/6,1/6,1/6,1/6,1/6,1/6],[1/6,1/6,1/6,1/6,1/6,1/6],[1/6,1/6,1/6,1/6,1/6,1/6],[1/6,1/6,1/6,1/6,1/6,1/6]])\n","M = (1-m)*A + m*S\n","\n","w,v = la.eig(M)\n","\n","index = 0\n","Mv = 0\n","print(\"Importance score\")\n","for vectors in v:\n","  index += 1\n","  importanceScore = vectors[0]/sum(v[:])[0]\n","  Mv += importanceScore\n","  print(\"x_{} = {}\".format(index, importanceScore))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Importance score\n","x_1 = (0.302225676609946-0j)\n","x_2 = (0.10160006820523376-0j)\n","x_3 = (0.2965457891769966-0j)\n","x_4 = (0.13994714049603885-0j)\n","x_5 = (0.1374794690110916-0j)\n","x_6 = (0.022201856500693173-0j)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"NdNrX_eUfOcO"},"source":["Adding a sixth page causes 1-5's page ranks decreased."]},{"cell_type":"markdown","metadata":{"id":"8EVUotgK3Sqa"},"source":["### Exercise 13"]},{"cell_type":"markdown","metadata":{"id":"8_CLspEQ5i8S"},"source":["$1$ links to $2$ and $3$ \\\\\n","$2$ links to $4$ \\\\\n","$3$ links to $5$ \\\\\n","$4$ links to $1,3$ \\\\\n","$5$ links to $2,3,4$ \\\\"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O_6w3_6-5i8T","executionInfo":{"status":"ok","timestamp":1629346261341,"user_tz":240,"elapsed":10,"user":{"displayName":"Alexys Onyemakonor","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghcy-rinLlnxJ70YfkeHSMhbO6hdAcHjM12DX6Q=s64","userId":"15627062774810642330"}},"outputId":"49f32ade-73d2-4b86-9661-a99c429840eb"},"source":["import numpy as np\n","from numpy import linalg as la\n","m = 0.15\n","A = np.array([[0,0,0,1/2,0],[1/2,0,0,0,1/3],[1/2,0,0,1/2,1/3],[0,1,0,0,1/3],[0,0,1,0,0]])\n","S = np.array([[1/5,1/5,1/5,1/5,1/5],[1/5,1/5,1/5,1/5,1/5],[1/5,1/5,1/5,1/5,1/5],[1/5,1/5,1/5,1/5,1/5],[1/5,1/5,1/5,1/5,1/5]])\n","M = (1-m)*A + m*S\n","\n","w,v = la.eig(M)\n","\n","index = 0\n","Mv = 0\n","print(\"Importance score\")\n","for vectors in v:\n","  index += 1\n","  importanceScore = vectors[0]/sum(v[:])[0]\n","  Mv += importanceScore\n","  print(\"x_{} = {}\".format(index, importanceScore))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Importance score\n","x_1 = (0.12705887777214261+0j)\n","x_2 = (0.15263451519203275+0j)\n","x_3 = (0.24969339296417556+0j)\n","x_4 = (0.22837383005210005+0j)\n","x_5 = (0.24223938401954903+0j)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Qg8NVkXb3TFK"},"source":["### Exercise 14"]},{"cell_type":"code","metadata":{"id":"Jr3GQIee3TeO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1629421029593,"user_tz":240,"elapsed":175,"user":{"displayName":"Alexys Onyemakonor","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghcy-rinLlnxJ70YfkeHSMhbO6hdAcHjM12DX6Q=s64","userId":"15627062774810642330"}},"outputId":"2ac3ea72-cf8c-4584-b697-40f0507cf189"},"source":["import numpy as np\n","from numpy import linalg as la\n","\n","A = np.array([[0,0,1/2,1/2,0],[1/3,0,0,0,0],[1/3,1/2,0,1/2,1],[1/3,1/2,0,0,0],[0,0,1/2,0,0]])\n","S = np.array([[1/5,1/5,1/5,1/5,1/5],[1/5,1/5,1/5,1/5,1/5],[1/5,1/5,1/5,1/5,1/5],[1/5,1/5,1/5,1/5,1/5],[1/5,1/5,1/5,1/5,1/5]])\n","M = (1-m)*A + m*S\n","x0 = np.array([0.12,0.4,0.2,0.1,0.1])#random initial guess\n","w,v = la.eig(M) #element w[0] is eigenvalue 1\n","q = v[:,0] / v[:,0].sum()\n","\n","\n","for i,k in enumerate([1,5,10,50]):\n","  res = la.matrix_power(M,k)*x0.transpose() - q.transpose()\n","  \n","  if i > 0:\n","    normalized_res = (la.matrix_power(M,k)*x0.transpose() - q.transpose())/(la.matrix_power(M,k_minus_1)*x0.transpose() - q.transpose())\n","    print(\"k = {}: \\n----------------\\nnon-normalized: {}\\n\\nnormalized: {}\\n----------------\\n\".format(k, res[i], normalized_res[i]))\n","  else:\n","    print(\"k = {}: \\n----------------\\nnon-normalized: {}\\n----------------\\n\".format(k, res[i]))\n","\n","  k_minus_1 = k\n","\n","print(\"Absolute value of the second largest eigenvalue of M: {}\".format(w[1]))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["k = 1: \n","----------------\n","non-normalized: [-0.23354058+0.j -0.08518983+0.j -0.25789409+0.j -0.09299551+0.j\n"," -0.17527999+0.j]\n","----------------\n","\n","k = 5: \n","----------------\n","non-normalized: [-0.22569589+0.j -0.05575414+0.j -0.33310631+0.j -0.12752033+0.j\n"," -0.16607229+0.j]\n","\n","normalized: [1.13107762-0.j 0.65446945-0.j 0.97145537-0.j 0.94114064-0.j\n"," 0.94746865-0.j]\n","----------------\n","\n","k = 10: \n","----------------\n","non-normalized: [-0.19528427+0.j  0.0420337 +0.j -0.27830694+0.j -0.10385704+0.j\n"," -0.14392888+0.j]\n","\n","normalized: [1.00018369-0.j 0.91902157+0.j 0.96459159-0.j 1.03230651-0.j\n"," 1.05056159-0.j]\n","----------------\n","\n","k = 50: \n","----------------\n","non-normalized: [-0.22052112+0.j -0.04179163+0.j -0.32119499+0.j -0.12464596+0.j\n"," -0.16443044+0.j]\n","\n","normalized: [0.99999332-0.j 0.99891431-0.j 1.0002762 -0.j 0.99979215-0.j\n"," 0.99964236-0.j]\n","----------------\n","\n","Absolute value of the second largest eigenvalue of M: (0.28588148574344097+0j)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"NJw5eLSD3Tjj"},"source":["### Exercise 15"]},{"cell_type":"code","metadata":{"id":"jIxNSmqlrSqo"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gbXP1RkT3T_y"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"c-qwLjyMrIo6"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cosPZogL3UFb"},"source":["### Exercise 16"]},{"cell_type":"code","metadata":{"id":"ht6UUK0y3UeB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1629433605642,"user_tz":240,"elapsed":322,"user":{"displayName":"Alexys Onyemakonor","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghcy-rinLlnxJ70YfkeHSMhbO6hdAcHjM12DX6Q=s64","userId":"15627062774810642330"}},"outputId":"5d47817f-8a66-437b-bba9-08591fa6811b"},"source":["from sympy import *  \n","\n","A = Matrix([[0, 1/2, 1/2],[0,0,1/2],[1,1/2,0]])\n","S = Matrix([[1/3,1/3,1/3],[1/3,1/3,1/3],[1/3,1/3,1/3]])\n","m_list = [0,0.15, 0.99]\n","\n","# Use sympy.diagonalize() method \n","\n","for m in m_list:\n","  M = (1-m)*A + m*S\n","  P, D = M.diagonalize()  \n","  print(\"when m = {}:\\nM : {}\\nDiagonal of M : {}\\n-------\\n\".format(m, M, D))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["when m = 0:\n","M : Matrix([[0, 0.500000000000000, 0.500000000000000], [0, 0, 0.500000000000000], [1, 0.500000000000000, 0]])\n","Diagonal of M : Matrix([[1.0 - 1.17656788198909e-66*I, 0, 0], [0, -0.5 - 6.29032065609307e-35*I, 0], [0, 0, -0.5 + 6.29032065609307e-35*I]])\n","-------\n","\n","when m = 0.15:\n","M : Matrix([[0.0500000000000000, 0.475000000000000, 0.475000000000000], [0.0500000000000000, 0.0500000000000000, 0.475000000000000], [0.900000000000000, 0.475000000000000, 0.0500000000000000]])\n","Diagonal of M : Matrix([[1.0 - 6.85287873399207e-67*I, 0, 0], [0, -0.425 - 2.02807088423958e-50*I, 0], [0, 0, -0.425 + 2.02807088423957e-50*I]])\n","-------\n","\n","when m = 0.99:\n","M : Matrix([[0.330000000000000, 0.335000000000000, 0.335000000000000], [0.330000000000000, 0.330000000000000, 0.335000000000000], [0.340000000000000, 0.335000000000000, 0.330000000000000]])\n","Diagonal of M : Matrix([[1.0 - 1.67354819266263e-37*I, 0, 0], [0, -0.00500000000000001 - 1.49030614976372e-21*I, 0], [0, 0, -0.005 + 1.4903061497636e-21*I]])\n","-------\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"706TFfJjzBYY"},"source":["Notice above that the calculations for the \"diagonal\" for M when $0 \\le m \\lt 1$ all contain imaginary numbers; therefore, $M$ is not diagonalizable for $0 \\le m \\lt 1$"]},{"cell_type":"markdown","metadata":{"id":"2Jt-VVwF3Uj8"},"source":["### Exercise 17"]},{"cell_type":"markdown","metadata":{"id":"36MDZXAPs3Wq"},"source":["Since $M$ is a weighted average between the link matrix $A$ and $S$, $m$ should be chosen where more weight is placed on the link matrix since link matrix $A$ contains the true set of votes per page in web $W$. Matrix $S$ should never gain more influence over the link matrix since it is only used to help calculate an umambigupus importance source for a web with disconnect subwebs; therefore, $m < 0.5$. By chosing a value for $m$ that's less than 0.5, the rankings will be closer to the rankings if we used link matrix A (i.e, instead of the modified matrix $M$) and the computation time will decrease since the scores will converge faster."]}]}