// ----------------------------------------------------------------------------
//
// -------------------------------- Type Mixer --------------------------------
//
// ----------------------------------------------------------------------------
//
//  Purpose : To study the effects of performing operations on 
//            mixed data types.
//
//  Author  : Paul Zoski
//  Date    : 4/3/99
//  Modified: reformatted, JL Popyack Jan. 2002, Jan. 2003.
//
// ----------------------------------------------------------------------------

	#include <iostream>
	using namespace std;

// ----------------------------------------------------------------------------
//
// ------------------------------- Main Program -------------------------------
//
// ----------------------------------------------------------------------------

	int main( void )
	{
		int   i=1, j=10, k=20 ;					
		char  a='a', B='B', dollarSign='$';
		float x=2.2, y=4.2/5.1, z=1.116e-5;
		
	// ---------------------------------------------------------------------
	// The variables were already assigned values.  Let's check them out.
	// ---------------------------------------------------------------------
		
		cout << "i = " << i << "\tj= " << j << "\t\tk= " << k << endl;
		cout << "a = " << a << "\tB= " << B << "\t\tdollarSign= " << dollarSign << endl;
		cout << "x = " << x << "\ty= " << y << "\tz= " << z << endl << endl;
		
	// ---------------------------------------------------------------------		
	// And now the fun stuff ....
	// ---------------------------------------------------------------------
		
		// ---------------------------------------------------------------------
		// an integer plus a character

			cout << "a+j = " << a+j << endl;
			
		// ---------------------------------------------------------------------
		// a character plus an integer
		
			cout << "k+B = " << k+B << endl;
			
		// ---------------------------------------------------------------------
		// mixing floats and characters
		
			cout << "x/dollarSign = " << x/dollarSign << endl << endl;
			
		// ---------------------------------------------------------------------
		// we can declare new objects at any time!
		
			char newChar;
			newChar = a+j;
			
		// ---------------------------------------------------------------------
		// huh? What's going on here?
		
			cout << "a+j = " << newChar << endl << endl;
			
		// ---------------------------------------------------------------------
		// we can give newChar a new value
		
			newChar = B - 6;
			cout << "B-6 = " << B-6 << endl;
			cout << "B-6 = " << newChar << endl;

		return 0;
	}