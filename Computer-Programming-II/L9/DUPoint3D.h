//----------------------------------------------------------------------------
//
//  DU Point 3D class
//    Header
//
//  This class represents an ordered triple (x,y,z).
//  It is derived from the DUPoint class.
//
//----------------------------------------------------------------------------
//
//  Author:         JL Popyack, 
//  Course:         CS172
//                  Derived from DUPoint class (by Hoi-Man Chang)
//  Date:           5/26/99
//
//  Modified:       JL Popyack: 5/20/2
//
//----------------------------------------------------------------------------

#ifndef __DUPoint3D__
#define __DUPoint3D__

#include <string>
#include "DUPoint.h"
using namespace std ;


//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

class DUPoint3D : public DUPoint
{
  public:  	
  	
		//------------------------------------------------------
		//----- Constructors -----------------------------------
		//------------------------------------------------------
		
			DUPoint3D() ;
		  	DUPoint3D(int x, int y, int z);
			DUPoint3D(const DUPoint3D & p) ;
		  	
		//------------------------------------------------------
		//----- Destructor -------------------------------------
		//------------------------------------------------------
		  	
		  	~DUPoint3D() ;
	  	
		//------------------------------------------------------
		//----- Inspectors -------------------------------------
		//------------------------------------------------------
	  			
		  	int getZ() const;
	  	
		//------------------------------------------------------
		//----- Mutators ---------------------------------------
		//------------------------------------------------------
		  	
		   	void setZ(int z);    
		  	
		//------------------------------------------------------
		//----- Facilitators -----------------------------------
		//------------------------------------------------------
		
			//------------------------------------------------------
			// return DUPoint in string form
			   string toString() const ;    

			//------------------------------------------------------
			// insert DUPoint in output stream
		  	   void output(ostream &out) const ;

			//------------------------------------------------------
			// extract DUPoint from input stream
		  	   void input(istream &in) ;
	 	
  private:
	int z_;
};



//----------------------------------------------------------------------------
//----- DUPoint3D: auxiliary operator descriptions ---------------------------
//----------------------------------------------------------------------------

	istream& operator>> (istream& in, DUPoint3D &p) ;
	ostream& operator<< (ostream& out, const DUPoint3D &p) ;

#endif